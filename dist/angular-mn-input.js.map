{"version":3,"sources":["mn-input/mn-input.directive.js","app.js"],"names":["mnInputDirective","$compile","link","scope","element","attributes","input","find","attr","ngModel","restrict","require","angular","module","$inject","directive"],"mappings":"YAIA,SAASA,kBAAiBC,UAOxB,QAASC,MAAKC,MAAOC,QAASC,YAC5B,GAAMC,OAAQF,QAAQG,KAAK,QAC3BD,OAAME,KAAK,WAAYH,WAAWI,SAClCR,SAASK,OAAOH,OATlB,OACEO,SAAU,IACVR,KAAAA,KACAS,QAAS,WCRbC,QAAQC,OAAO,eDCfb,iBAAiBc,SAAW,YAD5BF,QACGC,OAAO,YACPE,UAAU,UAAWf","file":"angular-mn-input.js","sourcesContent":["angular\n  .module('mn-input')\n  .directive('mnInput', mnInputDirective)\n\nfunction mnInputDirective($compile) {\n  return {\n    restrict: 'E',\n    link,\n    require: 'ngModel',\n  }\n\n  function link(scope, element, attributes) {\n    const input = element.find('input')\n    input.attr('ng-model', attributes.ngModel)\n    $compile(input)(scope)\n\n    // const formName = element[0].closest('form').getAttribute('name')\n\n    // if (attributes.name && formName) {\n    //   const messagesRule = 'formName.$submitted && formName.inputName.$error'\n    //     .replace(/formName/g, formName)\n    //     .replace(/inputName/g, attributes.name)\n\n    //   const validations = [\n    //     {\n    //       name: 'required',\n    //       text: 'is required',\n    //     },\n    //     {\n    //       name: 'email',\n    //       text: 'is invalid',\n    //     },\n    //   ]\n\n    //   const label = element[0].querySelector('label')\n    //   label.setAttribute('ng-messages', messagesRule)\n    //   validations.forEach(setMessage)\n    //   $compile(label)(scope)\n\n    //   function setMessage(validation) {\n    //     const message = document.createElement('span')\n    //     message.setAttribute('ng-message', validation.name)\n    //     message.textContent = ` ${validation.text}`\n    //     label.appendChild(message)\n    //   }\n    // }\n  }\n}\n","angular.module('mn-input', [])\n"]}