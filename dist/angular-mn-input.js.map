{"version":3,"sources":["app.js","mn-input/mn-input.directive.js"],"names":["mnInputDirective","$compile","link","scope","element","attributes","input","find","attr","ngModel","formName","closest","name","setMessage","validation","message","document","createElement","setAttribute","textContent","text","messages","appendChild","messagesRule","replace","validations","classList","add","forEach","restrict","require","angular","module","directive"],"mappings":"AAAA,YCMA,SAASA,kBAAiBC,UAOxB,QAASC,MAAKC,MAAOC,QAASC,YAC5B,GAAIC,OAAQF,QAAQG,KAAK,QACzBD,OAAME,KAAK,WAAYH,WAAWI,SAClCR,SAASK,OAAOH,MAEhB,IAAIO,UAAWN,QAAQ,GAAGO,QAAQ,QAAQC,IAEtCP,YAAWO,MAAQF,WAAU,WAAA,GAuBtBG,YAAT,SAAoBC,YAClB,GAAIC,SAAUC,SAASC,cAAc,OACrCF,SAAQG,aAAa,aAAcJ,WAAWF,MAC9CG,QAAQI,YAAcL,WAAWM,KACjCC,SAASC,YAAYP,UA1BnBQ,aAAe,mDAChBC,QAAQ,YAAad,UACrBc,QAAQ,aAAcnB,WAAWO,MAEhCa,cAEAb,KAAM,WACNQ,KAAM,mBAGNR,KAAM,QACNQ,KAAM,0BAINC,SAAWL,SAASC,cAAc,QACtCI,UAASK,UAAUC,IAAI,WACvBN,SAASH,aAAa,cAAeK,cACrCE,YAAYG,QAAQf,YACpBT,QAAQ,GAAGkB,YAAYD,UACvBpB,SAASoB,UAAUlB,UAlCvB,OACE0B,SAAU,IACV3B,KAAAA,KACA4B,QAAS,WDRbC,QAAQC,OAAO,YACb,eCDFD,QACGC,OAAO,YACPC,UAAU,UAAWjC","file":"angular-mn-input.js","sourcesContent":["'use strict';\n\nangular.module('mn-input', [\n  'ngMessages',\n]);\n","'use strict';\n\nangular\n  .module('mn-input')\n  .directive('mnInput', mnInputDirective);\n\nfunction mnInputDirective($compile) {\n  return {\n    restrict: 'E',\n    link,\n    require: 'ngModel',\n  };\n\n  function link(scope, element, attributes) {\n    let input = element.find('input');\n    input.attr('ng-model', attributes.ngModel);\n    $compile(input)(scope);\n\n    let formName = element[0].closest('form').name;\n\n    if (attributes.name && formName) {\n      let messagesRule = 'formName.$submitted && formName.inputName.$error'\n        .replace(/formName/g, formName)\n        .replace(/inputName/g, attributes.name);\n\n      let validations = [\n        {\n          name: 'required',\n          text: 'Required field',\n        },\n        {\n          name: 'email',\n          text: 'Invalid email address',\n        },\n      ];\n\n      let messages = document.createElement('small');\n      messages.classList.add('message');\n      messages.setAttribute('ng-messages', messagesRule);\n      validations.forEach(setMessage);\n      element[0].appendChild(messages);\n      $compile(messages)(scope);\n\n      function setMessage(validation) {\n        let message = document.createElement('span');\n        message.setAttribute('ng-message', validation.name);\n        message.textContent = validation.text;\n        messages.appendChild(message);\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}